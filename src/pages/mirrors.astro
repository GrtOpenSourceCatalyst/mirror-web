---
import BasicLayout from "../layouts/BasicLayout.astro";
import MirrorList from "../components/MirrorList.svelte";
import "@/styles/global.css";

const pageTitle = "镜像列表 | 开源软件镜像服务";
const pageDescription = "浏览所有可用的镜像源，包括开源系统、软件仓库等资源。";

// 在服务端获取镜像数据
let initialMirrors = [];
let initialError = null;

try {
  const response = await fetch("http://localhost:8082/static/tunasync.json");

  if (!response.ok) {
    throw new Error(`HTTP错误: ${response.status}`);
  }

  const data = await response.json();
  initialMirrors = Object.entries(data).map(([name, info]) => ({
    name,
    ...info,
    // 格式化最后更新时间
    lastUpdated: new Date(info.last_update_ts * 1000).toLocaleString("zh-CN"),
  }));
} catch (err) {
  initialError = err.message;
  console.error("服务端获取数据失败:", err);
}
---

<BasicLayout title={pageTitle} description={pageDescription}>
  <div class="mx-auto w-full max-w-6xl">
    <div class="breadcrumb mb-6">
      <ol class="flex text-sm">
        <li class="crumb"><a href="/" class="anchor">首页</a></li>
        <li class="crumb-separator">{'/'}</li>
        <li class="crumb">镜像列表</li>
      </ol>
    </div>
    
    <section class="mb-8">
      <h1 class="h1 mb-4">镜像列表</h1>
      <p class="text-lg">
        这里列出了我们提供的所有镜像源。点击任意镜像名称可以查看详细的使用指南。
      </p>
    </section>

    <MirrorList
      client:load
      initialMirrors={initialMirrors}
      initialError={initialError}
    />
  </div>
</BasicLayout>
